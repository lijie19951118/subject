import{_ as e,o as r,c as u}from"./index-bd82a3f5.js";const a={},t={class:""};function n(N,c){return r(),u("div",t,' 1.数值，直接返回 2.布尔值，true转换成1，false转换成0 3.null，返回0 4.undefined，返回NaN 5,字符串 5.1,如果字符串包含数值字符，包括数值字符前面带加、减号的情况，则转换为一个十进制数值 5.2,如果字符串包含有效的浮点值格式如"1.1"，则会转换为相应的浮点值（同样，忽略前面的零） 5.3,如果字符串包含有效的十六进制格式如"0xf"，则会转换为与该十六进制值对应的十进制整数值。 5.4,如果是空字符串（不包含字符），则返回 0 5.5,如果字符串包含除上述情况之外的其他字符，则返回 NaN 6.对象/数组，先调用valueOf()方法，如果结果不是基本类型，再调用toString()方法; （在 JavaScript 中，valueOf() 是一个对象方法，用于返回对象的原始值（primitive value），默认情况下，valueOf() 方法返回对象本身） Number(123); // 123 Number("456"); // 456 Number(true); // 1 Number(false); // 0 Number(null); // 0 Number(undefined); // NaN Number([1, 2, 3]); // NaN Number({}); // NaN Number({ valueOf: () => 123 }); // 123 Number({ toString: () => "456" }); // 456 ')}const f=e(a,[["render",n]]);export{f as default};
